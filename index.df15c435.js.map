{"mappings":"ACEA,IAAM,EAAW,IAAI,QAAQ,SAAC,CAAA,CAAS,CAAvC,EAGE,AAFa,SAAS,aAAa,CAAC,SAE/B,gBAAgB,CAAC,QAAS,WAC7B,EAAQ,UACV,EACF,GAEM,EAAW,IAAI,QAAQ,SAAC,CAAA,CAAS,CAAvC,EACE,WAAW,WACT,EAAO,AAAI,MAAM,SACnB,EAAG,IACL,GAEA,SAAS,EAAW,CAAO,EAAE,IAAA,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,EAAA,SAAA,CAAA,EAAA,CACrB,EAAO,SAAS,IAAI,CACpB,EAAM,SAAS,aAAa,CAAC,OAEnC,EAAI,SAAS,CAAC,GAAG,CAAC,WAEd,GACF,EAAI,SAAS,CAAC,GAAG,CAAC,iBAEpB,EAAI,WAAW,CAAG,EAClB,EAAK,WAAW,CAAC,EACnB,CAEA,EACG,IAAI,CAAC,WACJ,EAAW,wBACb,GACC,KAAK,CAAC,WACL,EAAW,wBAAyB,CAAA,EACtC,GAEF,EACG,IAAI,CAAC,WACJ,EAAW,wBACb,GACC,KAAK,CAAC,WACL,EAAW,wBAAyB,CAAA,EACtC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar promise1 = new Promise(function(resolve, reject) {\n    var logo = document.querySelector(\".logo\");\n    logo.addEventListener(\"click\", function() {\n        resolve(\"Success\");\n    });\n});\nvar promise2 = new Promise(function(resolve, reject) {\n    setTimeout(function() {\n        reject(new Error(\"Error\"));\n    }, 3000);\n});\nfunction addMessage(message) {\n    var isError = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n    var body = document.body;\n    var div = document.createElement(\"div\");\n    div.classList.add(\"message\");\n    if (isError) div.classList.add(\"error-message\");\n    div.textContent = message;\n    body.appendChild(div);\n}\npromise1.then(function() {\n    addMessage(\"Promise was resolved!\");\n}).catch(function() {\n    addMessage(\"Promise was rejected!\", true);\n});\npromise2.then(function() {\n    addMessage(\"Promise was resolved!\");\n}).catch(function() {\n    addMessage(\"Promise was rejected!\", true);\n});\n\n//# sourceMappingURL=index.df15c435.js.map\n","'use strict';\n\nconst promise1 = new Promise((resolve, reject) => {\n  const logo = document.querySelector('.logo');\n\n  logo.addEventListener('click', () => {\n    resolve('Success');\n  });\n});\n\nconst promise2 = new Promise((resolve, reject) => {\n  setTimeout(() => {\n    reject(new Error('Error'));\n  }, 3000);\n});\n\nfunction addMessage(message, isError = false) {\n  const body = document.body;\n  const div = document.createElement('div');\n\n  div.classList.add('message');\n\n  if (isError) {\n    div.classList.add('error-message');\n  }\n  div.textContent = message;\n  body.appendChild(div);\n}\n\npromise1\n  .then(() => {\n    addMessage('Promise was resolved!');\n  })\n  .catch(() => {\n    addMessage('Promise was rejected!', true);\n  });\n\npromise2\n  .then(() => {\n    addMessage('Promise was resolved!');\n  })\n  .catch(() => {\n    addMessage('Promise was rejected!', true);\n  });\n"],"names":["promise1","Promise","resolve","reject","logo","document","querySelector","addEventListener","promise2","setTimeout","Error","addMessage","message","isError","arguments","length","body","div","createElement","classList","add","textContent","appendChild","then","catch"],"version":3,"file":"index.df15c435.js.map"}